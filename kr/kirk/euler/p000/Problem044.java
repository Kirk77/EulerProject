package kr.kirk.euler.p000;

/*

오각수는 Pn = n (3n − 1)/2 라는 공식으로 구할 수 있고, 처음 10개의 오각수는 다음과 같습니다.

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

위에서 P4 + P7 = 22 + 70 = 92 = P8이 됨을 볼 수 있습니다. 하지만 두 값의 차인 70 − 22 = 48 은 오각수가 아닙니다.

합과 차도 모두 오각수인 두 오각수 Pj, Pk 에 대해서, 그 차이 D = | Pk − Pj | 는 가장 작을 때 얼마입니까?



Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

*/

public class Problem044 {

	public static void main(String[] args) {
		System.out.println(solution());
	}

	private static int solution() {

		int x = Integer.MAX_VALUE;
		
		for ( int k = 2; k<10000; k++) {
			for( int j=k-1; j>0; j--) {
				
				int pK = k * ( 3*k -1 ) /2;
				int pJ = j * ( 3*j -1 ) /2;
				
				if ( x != Integer.MAX_VALUE && x < pK-pJ) break;
				if ( isPentagonal(pK+pJ) && isPentagonal(pK-pJ)) {
					System.out.println( "pK(" + k + ") : " + pK + ",  pJ(" + j + ") : " + pJ + " -> : " + (pK-pJ));
					x = (x > pK-pJ) ? pK-pJ : x;
				}
			}
		}

		return x;
	}

	private static boolean isPentagonal(int i) {

		int a = (1 + (int)Math.sqrt(24*i + 1))/6;
		
		if (a * ( 3*a -1 ) /2 == i) return true;		
		return false;
	}
}